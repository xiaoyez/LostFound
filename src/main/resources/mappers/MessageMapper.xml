<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lostfound.lost_found.dao.MessageMapper">
    <resultMap id="BaseResultMap" type="com.lostfound.lost_found.pojo.Message">
        <id column="Message_ID" jdbcType="INTEGER" property="messageId"/>
        <result column="Sender_ID" jdbcType="INTEGER" property="senderId"/>
        <result column="Receiver_ID" jdbcType="INTEGER" property="receiverId"/>
        <result column="Context" jdbcType="VARCHAR" property="context"/>
        <result column="Date" jdbcType="TIMESTAMP" property="date"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    Message_ID, Sender_ID, Receiver_ID, Context, Date
  </sql>


    <select id="getMsgs" parameterType="java.util.Map" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>  from message
    where ((Sender_Id = #{receiverId} and Receiver_Id=#{senderId}) or (Sender_Id = #{senderId} and Receiver_Id=#{receiverId}))
        order by Date ASC
  </select>

    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>  from message
        where Sender_Id = #{userId} or Receiver_Id=#{userId}
    </select>


    <select id="selectByExample" parameterType="com.lostfound.lost_found.pojo.MessageExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from message
        where Message_ID = #{messageId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where Message_ID = #{messageId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.lostfound.lost_found.pojo.MessageExample">
        delete from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lostfound.lost_found.pojo.Message">
    insert into message (Message_ID, Sender_ID, Receiver_ID, 
      Context, Date)
    values (#{messageId,jdbcType=INTEGER}, #{senderId,jdbcType=INTEGER}, #{receiverId,jdbcType=INTEGER}, 
      #{context,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.lostfound.lost_found.pojo.Message">
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                Message_ID,
            </if>
            <if test="senderId != null">
                Sender_ID,
            </if>
            <if test="receiverId != null">
                Receiver_ID,
            </if>
            <if test="context != null">
                Context,
            </if>
            <if test="date != null">
                Date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                #{messageId,jdbcType=INTEGER},
            </if>
            <if test="senderId != null">
                #{senderId,jdbcType=INTEGER},
            </if>
            <if test="receiverId != null">
                #{receiverId,jdbcType=INTEGER},
            </if>
            <if test="context != null">
                #{context,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lostfound.lost_found.pojo.MessageExample"
            resultType="java.lang.Long">
        select count(*) from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update message
        <set>
            <if test="record.messageId != null">
                Message_ID = #{record.messageId,jdbcType=INTEGER},
            </if>
            <if test="record.senderId != null">
                Sender_ID = #{record.senderId,jdbcType=INTEGER},
            </if>
            <if test="record.receiverId != null">
                Receiver_ID = #{record.receiverId,jdbcType=INTEGER},
            </if>
            <if test="record.context != null">
                Context = #{record.context,jdbcType=VARCHAR},
            </if>
            <if test="record.date != null">
                Date = #{record.date,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update message
        set Message_ID = #{record.messageId,jdbcType=INTEGER},
        Sender_ID = #{record.senderId,jdbcType=INTEGER},
        Receiver_ID = #{record.receiverId,jdbcType=INTEGER},
        Context = #{record.context,jdbcType=VARCHAR},
        Date = #{record.date,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lostfound.lost_found.pojo.Message">
        update message
        <set>
            <if test="senderId != null">
                Sender_ID = #{senderId,jdbcType=INTEGER},
            </if>
            <if test="receiverId != null">
                Receiver_ID = #{receiverId,jdbcType=INTEGER},
            </if>
            <if test="context != null">
                Context = #{context,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                Date = #{date,jdbcType=TIMESTAMP},
            </if>
        </set>
        where Message_ID = #{messageId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lostfound.lost_found.pojo.Message">
    update message
    set Sender_ID = #{senderId,jdbcType=INTEGER},
      Receiver_ID = #{receiverId,jdbcType=INTEGER},
      Context = #{context,jdbcType=VARCHAR},
      Date = #{date,jdbcType=TIMESTAMP}
    where Message_ID = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>